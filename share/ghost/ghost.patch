diff --git a/current/core/server/web/parent/app.js b/current/core/server/web/parent/app.js
index 199e8114d..4b9f75f81 100644
--- a/current/core/server/web/parent/app.js
+++ b/current/core/server/web/parent/app.js
@@ -71,6 +71,24 @@ module.exports = function setupParentApp(options = {}) {

     parentApp.use(vhost(frontendVhostArg, frontendApp));

+    // If we are behind a proxy that uses a non-standard forwarded proto header,
+    // we should replace the X-Forwarded-Proto with its value
+    const forwardedProtoHeader = config.get('forwarded_proto_header');
+    if (forwardedProtoHeader) {
+        parentApp.use(function (req, res, next) {
+            if (req.headers[forwardedProtoHeader]) {
+                req.headers['x-forwarded-proto'] = req.headers[forwardedProtoHeader];
+                req.headers['x-forwarded-port'] = req.headers[forwardedProtoHeader] === 'https' ? 443 : 80;
+            }
+            next();
+        });
+    }
+
+    // Make a ping endpoint available that always returns 200 OK
+    parentApp.get('/ping', function (req, res) {
+        res.send({answer: 'pong'});
+    });
+
     debug('ParentApp setup end');

     return parentApp;
diff --git a/current/core/server/web/parent/middleware/log-request.js b/current/core/server/web/parent/middleware/log-request.js
index 7eedfc7b8..917359069 100644
--- a/current/core/server/web/parent/middleware/log-request.js
+++ b/current/core/server/web/parent/middleware/log-request.js
@@ -7,13 +7,15 @@ module.exports = function logRequest(req, res, next) {
     const startTime = Date.now();

     function logResponse() {
-        res.responseTime = (Date.now() - startTime) + 'ms';
+        res.responseTime = (Date.now() - startTime);
         req.userId = req.user ? (req.user.id ? req.user.id : req.user) : null;

         if (req.err && req.err.statusCode !== 404) {
-            logging.error({req: req, res: res, err: req.err});
-        } else {
-            logging.info({req: req, res: res});
+            logging.error(req.err);
+        }
+
+        if (req.headers['user-agent'] !== 'Amazon CloudFront') {
+            logging.debug(`${req.ips || req.ip} - ${req.userId || '-'} [${new Date().toISOString()}] "${req.method} ${req.originalUrl}" HTTP/${req.httpVersionMajor}.${req.httpVersionMinor} ${res.statusCode} ${res.getHeader('content-length') || (res.__headers && res.__headers['Content-Length']) || '-'} "${req.get('referer') || '-'}" "${req.get('user-agent') || '-'}" ${res.responseTime}`);
         }

         res.removeListener('finish', logResponse);
diff --git a/current/core/shared/logging.js b/current/core/shared/logging.js
index e057e8166..8c4bac81b 100644
--- a/current/core/shared/logging.js
+++ b/current/core/shared/logging.js
@@ -1,15 +1,13 @@
-const config = require('./config');
-const {logging} = require('ghost-ignition');
+const Logger = require('modern-logger');

-module.exports = logging({
-    name: config.get('logging:name'),
-    env: config.get('env'),
-    path: config.get('logging:path') || config.getContentPath('logs'),
-    domain: config.get('url'),
-    mode: config.get('logging:mode'),
-    level: config.get('logging:level'),
-    transports: config.get('logging:transports'),
-    gelf: config.get('logging:gelf'),
-    loggly: config.get('logging:loggly'),
-    rotation: config.get('logging:rotation')
+Logger.configure({
+    transports: {
+        console: [
+            {
+                colorize: false,
+                timestamp: false
+            }
+        ]
+    },
+    enableEmoji: false
 });
