#!/usr/bin/env bash

[ -z ${DOCKER_REPO-} ] && exit 1
[ -z ${NAME-} ] && exit 1
[ -z ${ANTIFRAGILE_INFRASTRUCTURE_DOMAIN_NAME-} ] && exit 1

VERSION=$(if [ -z ${VERSION-} ]; then echo $(if [ -z ${DOCKER_TAG-} ]; then echo latest; else echo $DOCKER_TAG; fi); else echo $VERSION; fi)
API_KEYS=$(if [ -z ${API_KEYS-} ]; then echo "[]"; else echo -n "[" $(IFS=',' read -ra keys <<< "$API_KEYS"; for key in ${keys[@]}; do echo -n "\"$key\","; done); echo -n "]"; fi)

pushd $(cd -P -- "$(dirname -- "$0")" && pwd -P)/..

[ -z ${ANTIFRAGILE_STATE_AWS_REGION-} ] || [ -z ${ANTIFRAGILE_STATE_AWS_S3_BUCKET-} ] || [ -z ${ANTIFRAGILE_STATE_AWS_DYNAMODB_TABLE-} ] || \
terraform init -upgrade \
-backend-config="region=${ANTIFRAGILE_STATE_AWS_REGION}" \
-backend-config="bucket=${ANTIFRAGILE_STATE_AWS_S3_BUCKET}" \
-backend-config="key=${NAME}.tfstate" \
-backend-config="encrypt=true" \
-backend-config="dynamodb_table=${ANTIFRAGILE_STATE_AWS_DYNAMODB_TABLE}" || exit 1

terraform get -update=true || exit 1

terraform taint -module=${NAME}.cluster.services.tasks aws_ecs_task_definition.antifragile-service

terraform plan \
-var "version=${VERSION}" \
-var "docker_repo=${DOCKER_REPO}" \
-var "domain_name=${ANTIFRAGILE_INFRASTRUCTURE_DOMAIN_NAME}" \
-var "api_keys=${API_KEYS}" || exit 1

terraform apply -auto-approve \
-var "version=${VERSION}" \
-var "docker_repo=${DOCKER_REPO}" \
-var "domain_name=${ANTIFRAGILE_INFRASTRUCTURE_DOMAIN_NAME}" \
-var "api_keys=${API_KEYS}" || exit 1

popd

exit 0
